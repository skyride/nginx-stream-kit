events {
}

rtmp {
    server {
        listen 1935;

        chunk_size 4000;

        # Ingest application
        application ingest {
            live on;

            allow publish all;
            allow play 127.0.0.1;
            deny play all;

            # Transcode this stream to a variety of distributions
            exec ffmpeg -re -i rtmp://localhost/$app/$name -vcodec copy -acodec copy -f flv rtmp://localhost/hls/${name}__source;
            #exec ffmpeg -re -i rtmp://localhost/$app/$name -vcodec libx264 -preset veryfast -vb 1600000 -vf scale=-1:720 -acodec libfdk_aac -ab 128000 -f flv rtmp://localhost/hls/${name}__720p;
            #exec ffmpeg -re -i rtmp://localhost/$app/$name -vcodec libx264 -preset veryfast -vb 1200000 -vf scale=-1:480 -acodec libfdk_aac -ab 96000 -f flv rtmp://localhost/hls/${name}__480p;

            # Django Callbacks
            on_publish      http://web:8000/nginx-callbacks/publish-start;
            on_publish_done http://web:8000/nginx-callbacks/publish-done;
        }

        # HLS application for distribution
        application hls {
            live on;
            hls on;
            hls_path /hls;

            allow publish 127.0.0.1;
            deny publish all;
            deny play all;

            # Django Callbacks
            on_publish      http://web:8000/nginx-callbacks/distribution-start;
            on_publish_done http://web:8000/nginx-callbacks/distribution-done;

            # Distributions
            hls_variant __source BANDWIDTH=3200000;
            hls_variant __720p BANDWIDTH=1728000;
            hls_variant __480p BANDWIDTH=1296000;
        }
    }

    access_log /dev/stdout;
}

http {
    server {
        listen 8000;

        location /stat {
            rtmp_stat all;
        }

        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }

            alias /hls;
            autoindex on;

            add_header Cache-Control no-cache;
        }

        access_log /dev/stdout;
        error_log /dev/stderr;
    }
}
