version: "3.0"

services:
  nginx:
    build:
      context: nginx/
    ports:
      - ${NGINX_PORT}:8000
    volumes:
      - static:/static
      - media:/media
      - hls:/hls
    depends_on:
      - web

  nginx-rtmp:
    build:
      context: nginx-rtmp/
    ports:
      - ${RTMP_PORT}:1935
    volumes:
      - ./nginx-rtmp:/app
      - hls:/hls
    depends_on:
      - web

  web:
    build: .
    command: ./manage.py runserver 0:8000
    env_file:
      - .env
    volumes:
      - .:/app
      - static:/static
      - media:/media
    depends_on:
      - postgres
      - redis
      - rabbitmq

  celery-transcode:
    build: .
    command: watchmedo auto-restart --directory=./ --pattern=*.py --recursive --ignore-patterns=./env/* -- celery worker -A streamkit -c 2 -Q transcode,s3ops
    env_file:
      - .env
    volumes:
      - .:/app
      - static:/static
      - media:/media
    depends_on:
      - postgres
      - redis
      - rabbitmq

  celery-batch:
    build: .
    command: watchmedo auto-restart --directory=./ --pattern=*.py --recursive --ignore-patterns=./env/* -- celery worker -A streamkit -Q s3ops -c 1
    env_file:
      - .env
    volumes:
      - .:/app
      - static:/static
      - media:/media
    depends_on:
      - postgres
      - redis
      - rabbitmq

  postgres:
    image: postgres:12-alpine
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:5.0-alpine
    volumes:
      - redisdata:/data
  
  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq

volumes:
  hls:
  pgdata:
  redisdata:
  rabbitmqdata:
  media:
  static: